<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.xxx.common</groupId>
	<artifactId>common</artifactId>
	<version>1.0</version>
	<packaging>pom</packaging>
	<name>common</name>
	<description>公共项目</description>
	<modules>
		<module>common-util</module>
		<module>common-repository</module>
		<module>common-server</module>
		<module>common-web</module>
		<module>common-dubbo-provider</module>
		<module>common-test</module>
		<module>common-dubbo-consumer</module>
		<module>common-think-in-java</module>
		<!--
		<module>common-deploy</module>
		<module>common-dao</module>
		<module>common-entity</module>
		<module>common-entity-hibernate</module>
		<module>common-cache</module>
    	<module>common-data</module>
    	<module>common-daq</module>
    	-->
	</modules>
	<properties>
		<java.version>1.6</java.version>
		<java.encoding>UTF-8</java.encoding>
		<spring-version>4.1.0.RELEASE</spring-version>
		<springext-plugin-version>1.2</springext-plugin-version>
		<project.build.sourceEncoding>${java.encoding}</project.build.sourceEncoding>
		<productionMode>false</productionMode>
		<slf4j.version>1.7.5</slf4j.version>
		<logback.version>1.0.13</logback.version>
		<dbcp.version>0.8.0.RELEASE</dbcp.version>
		<shiro.version>1.2.2</shiro.version>
		<junit-version>4.9</junit-version>
		<aspectj-version>1.7.1</aspectj-version>
		<jackson.version>1.9.2</jackson.version>
		<ehcache.version>2.6.6</ehcache.version>
		<hibernate.version>4.2.0.Final</hibernate.version>
		<poi-version>3.8</poi-version>
	</properties>
	<dependencies>
		<!-- Junit单元测试 -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit-version}</version>
			<!-- <scope>test</scope> -->
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring-version}</version>
			<!-- <scope>test</scope> -->
		</dependency>
		<!-- 日志及相关依赖（用slf4j+logback代替jcl+log4j�?-->
		<!-- ================================================= <dependency> <groupId>org.slf4j</groupId> 
			<artifactId>slf4j-api</artifactId> <version>${slf4j.version}</version> </dependency> -->
		<!-- 将现有的jakarta commons logging的调用转换成lsf4j的调用�? <dependency> <groupId>org.slf4j</groupId> 
			<artifactId>jcl-over-slf4j</artifactId> <version>${slf4j.version}</version> 
			</dependency> -->
		<!-- Hack：确保commons-logging的jar包不被引入，否则将和jcl-over-slf4j冲突 -->
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.3</version>
		</dependency>
		<!-- slf4j的实现：logback，用来取代log4j。更快�?更强�?<dependency> <groupId>ch.qos.logback</groupId> 
			<artifactId>logback-classic</artifactId> <version>${logback.version}</version> 
			</dependency> <dependency> <groupId>ch.qos.logback</groupId> <artifactId>logback-core</artifactId> 
			<version>${logback.version}</version> </dependency> -->
		<!-- log4j -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.5</version>
		</dependency>
		<!-- log4j插件，可以打印sql语句 -->
		<dependency>
			<groupId>org.lazyluke</groupId>
			<artifactId>log4jdbc-remix</artifactId>
			<version>0.2.7</version>
		</dependency>
		<!-- <dependency> <groupId>de.bitzeche.logback</groupId> <artifactId>logback-scribe</artifactId> 
			<version>1.0.0</version> </dependency> -->
		
		<!-- commons�?-->
		<dependency>
		  <groupId>commons-lang</groupId>
		  <artifactId>commons-lang</artifactId>
		  <version>2.6</version>
		</dependency>
		<dependency>
		  <groupId>org.apache.commons</groupId>
		  <artifactId>commons-lang3</artifactId>
		  <version>3.3.2</version>
		</dependency>

		<!-- ================================================= -->
		<!-- Spring框架 -->
		<!-- ================================================= -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring-version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring-version}</version>
		</dependency>
		<!-- spring end -->

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.12.2</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.1.26</version>
		</dependency>
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>1.4.4</version>
		</dependency>
		
		<!-- Apache Shiro框架 Start -->
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-core</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-spring</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
		  <groupId>org.apache.shiro</groupId>
		  <artifactId>shiro-ehcache</artifactId>
		  <version>1.2.3</version>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpasyncclient</artifactId>
			<version>4.0</version>
		</dependency>
		<!-- Apache Shiro框架 End -->
		
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${aspectj-version}</version>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<!-- 子项目依�?-->
			<dependency>
				<groupId>${pom.groupId}</groupId>
				<artifactId>common-deploy</artifactId>
				<version>${pom.version}</version>
			</dependency>
			<!-- 子项目工具包依赖 -->
			<dependency>
				<groupId>${pom.groupId}</groupId>
				<artifactId>common-util</artifactId>
				<version>${pom.version}</version>
			</dependency>
			<!-- 子项目实体层依赖 -->
			<dependency>
				<groupId>${pom.groupId}</groupId>
				<artifactId>common-entity</artifactId>
				<version>${pom.version}</version>
			</dependency>
			<!-- 子项目DAO层依�?-->
			<dependency>
				<groupId>${pom.groupId}</groupId>
				<artifactId>common-dao</artifactId>
				<version>${pom.version}</version>
			</dependency>
			<!-- 子项目资源层依赖 -->
			<dependency>
				<groupId>${pom.groupId}</groupId>
				<artifactId>common-repository</artifactId>
				<version>${pom.version}</version>
			</dependency>
			<!-- 子项目服务层依赖 -->
			<dependency>
				<groupId>${pom.groupId}</groupId>
				<artifactId>common-server</artifactId>
				<version>${pom.version}</version>
			</dependency>

			<!-- dbcp数据库连接池 -->
			<dependency>
				<groupId>com.jolbox</groupId>
				<artifactId>bonecp</artifactId>
				<version>${dbcp.version}</version>
			</dependency>
			<dependency>
				<groupId>com.jolbox</groupId>
				<artifactId>bonecp-spring</artifactId>
				<version>${dbcp.version}</version>
			</dependency>
			<!-- dbcp end -->

			<!-- mybatis ORM框架 -->
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis</artifactId>
				<version>3.2.3</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis-spring</artifactId>
				<version>1.2.1</version>
			</dependency>

			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>5.1.23</version>
			</dependency>

			<dependency>
				<groupId>com.github.miemiedev</groupId>
				<artifactId>mybatis-paginator</artifactId>
				<version>1.2.8</version>
			</dependency>
			<!-- mybatis end -->
			
			<!-- json数据转换，用于ajax请求 -->
			<dependency>
			  <groupId>org.codehaus.jackson</groupId>
			  <artifactId>jackson-core-asl</artifactId>
			  <version>${jackson.version}</version>
			</dependency>
			<dependency>
			  <groupId>org.codehaus.jackson</groupId>
			  <artifactId>jackson-mapper-asl</artifactId>
			  <version>${jackson.version}</version>
			</dependency>
			
			<!-- ehcache -->
			<dependency>
	            <groupId>net.sf.ehcache</groupId>
	            <artifactId>ehcache-core</artifactId>
	            <version>${ehcache.version}</version>
        	</dependency>
        	<dependency>
			  <groupId>net.sf.ehcache</groupId>
			  <artifactId>ehcache-web</artifactId>
			  <version>2.0.3</version>
			</dependency>
			
			<!-- POI -->
			<dependency>
			  <groupId>org.apache.poi</groupId>
			  <artifactId>poi</artifactId>
			  <version>${poi-version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>${poi-version}</version>
			</dependency>
			
			<!-- 其它第三方依�?-->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>3.1.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.velocity</groupId>
				<artifactId>velocity</artifactId>
				<version>1.7</version>
			</dependency>

			<dependency>
				<groupId>org.apache.velocity</groupId>
				<artifactId>velocity-tools</artifactId>
				<version>2.0</version>
			</dependency>
			
			<!-- Hibernate�? Begin-->
			<dependency>
			  <groupId>org.hibernate</groupId>
			  <artifactId>hibernate-core</artifactId>
			  <version>${hibernate.version}</version>
			</dependency>
			<dependency>
			  <groupId>org.hibernate</groupId>
			  <artifactId>hibernate-entitymanager</artifactId>
			  <version>${hibernate.version}</version>
			</dependency>
			<dependency>
			  <groupId>org.hibernate</groupId>
			  <artifactId>hibernate-ehcache</artifactId>
			  <version>${hibernate.version}</version>
			</dependency>
			<!-- Hibernate�? End-->
			
			<dependency>
			  <groupId>org.slf4j</groupId>
			  <artifactId>slf4j-simple</artifactId>
			  <version>1.7.7</version>
			</dependency>
			<dependency>
			  <groupId>javassist</groupId>
			  <artifactId>javassist</artifactId>
			  <version>3.8.0.GA</version>
			</dependency>
			
		</dependencies>
	</dependencyManagement>
	<build>
		<finalName>${pom.artifactId}</finalName>
		<plugins>
			<!-- 指定编译文件的编码 -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${java.encoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.8</version>
			</plugin>
			<!-- 打包同时生成源码 -->
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.2.1</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- 设置resouce目录下的所有文件编码，否则如果配置xml文件中有中文字符，部署后可能会引起运行失败 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<encoding>${java.encoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<!-- 打包时跳过test -->
					<skipTests>true</skipTests>
					<forkMode>once</forkMode>
					<!-- 解决执行test中文乱码问题 -->
					<argLine>-Dfile.encoding=UTF-8</argLine>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>