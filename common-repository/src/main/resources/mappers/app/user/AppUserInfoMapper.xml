<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xxx.common.repository.dao.app.user.AppUserInfoDao" > 
	<resultMap id="AppUserInfoMap" type="AppUserInfo">
	    <result property="id" column="id"/>
        <result property="account" column="account"/>
        <result property="password" column="password"/>
        <result property="duojuNo" column="duoju_no"/>
        <result property="faceUrl" column="face_url"/>
        <result property="sex" column="sex"/>
        <result property="birthday" column="birthday"/>
        <result property="registTime" column="regist_time"/>
        <result property="nickName" column="nick_name"/>
        <result property="mobile" column="mobile"/>
        <result property="weixinNo" column="weixin_no"/>
        <result property="isOpen" column="is_open"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="isDelete" column="is_delete"/>
        <result property="provinceName" column="province_name"/>
        <result property="cityName" column="city_name"/>
        <result property="areaName" column="area_name"/>
        <result property="appBasePartyCityId" column="app_base_party_city_id"/>
        <result property="scores" column="scores"/>
        <result property="bgUrl" column="bg_url"/>
        <result property="signature" column="signature"/>
        <result property="isGeek" column="is_geek"/>
        <result property="isMoke" column="is_moke"/>
        <result property="lastTime" column="last_time"/>
        <result property="deviceNo" column="device_no"/>
        <result property="inviteCode" column="invite_code"/>
        <result property="token" column="token"/>
        <result property="email" column="email"/>
        <result property="mobUuid" column="mob_uuid"/>
        <result property="isRegistParty" column="is_regist_party"/>
        <result property="isReleaseParty" column="is_release_party"/>
        <result property="isBusiness" column="is_business"/>
        <result property="registSource" column="regist_source"/>
        <result property="createUserId" column="create_user_id"/>
        <result property="registWay" column="regist_way"/>
        <result property="recommendTime" column="recommend_time"/>
        <result property="lastRealName" column="last_real_name"/>
        <result property="ages" column="ages"/>
        <result property="starSigns" column="star_signs"/>
        <result property="marriage" column="marriage"/>
    </resultMap>
    
    <!-- 自定义MAP -->
    <resultMap id="BaseMap" type="SimpleMapDO">
	    <result property="key" column="key_clm"/>
        <result property="value" column="value_clm"/>
    </resultMap>
   	
   	<!-- 所有查询字段 -->
   	<sql id="allSelectionColumn">
		id,
		account,
		password,
		duoju_no,
		face_url,
		sex,
		birthday,
		regist_time,
		nick_name,
		mobile,
		weixin_no,
		is_open,
		create_time,
		update_time,
		is_delete,
		province_name,
		city_name,
		area_name,
		app_base_party_city_id,
		scores,
		bg_url,
		signature,
		is_geek,
		is_moke,
		last_time,
		device_no,
		invite_code,
		token,
		email,
		mob_uuid,
		is_regist_party,
		is_release_party,
		is_business,
		regist_source,
		create_user_id,
		regist_way,
		recommend_time,
		last_real_name,
		ages,
		star_signs,
		marriage
	</sql>
   	
   	<!-- 根据ID查询实体数据 -->
    <select id="loadById" parameterType="int" resultMap="AppUserInfoMap">
        SELECT <include refid="allSelectionColumn"/> FROM app_user_info WHERE id = #{value} LIMIT 1
    </select>

    <!-- 添加数据 -->
    <insert id="insert" parameterType="AppUserInfo">
		<selectKey resultType="int" order="AFTER" keyProperty="id">
		SELECT LAST_INSERT_ID() AS id
		</selectKey>
        INSERT INTO app_user_info (
		 account, 
		 password, 
		 duoju_no, 
		 face_url, 
		 sex, 
		 birthday, 
		 regist_time, 
		 nick_name, 
		 mobile, 
		 weixin_no, 
		 is_open, 
		 create_time, 
		 update_time, 
		 is_delete, 
		 province_name, 
		 city_name, 
		 area_name, 
		 app_base_party_city_id, 
		 scores, 
		 bg_url, 
		 signature, 
		 is_geek, 
		 is_moke, 
		 last_time, 
		 device_no, 
		 invite_code, 
		 token, 
		 email, 
		 mob_uuid, 
		 is_regist_party, 
		 is_release_party, 
		 is_business, 
		 regist_source, 
		 create_user_id, 
		 regist_way, 
		 recommend_time, 
		 last_real_name, 
		 ages, 
		 star_signs, 
		 marriage
		 )  VALUES (
		 #{account}, 
		 #{password}, 
		 #{duojuNo}, 
		 #{faceUrl}, 
		 #{sex}, 
		 #{birthday}, 
		 #{registTime}, 
		 #{nickName}, 
		 #{mobile}, 
		 #{weixinNo}, 
		 #{isOpen}, 
		 #{createTime}, 
		 #{updateTime}, 
		 #{isDelete}, 
		 #{provinceName}, 
		 #{cityName}, 
		 #{areaName}, 
		 #{appBasePartyCityId}, 
		 #{scores}, 
		 #{bgUrl}, 
		 #{signature}, 
		 #{isGeek}, 
		 #{isMoke}, 
		 #{lastTime}, 
		 #{deviceNo}, 
		 #{inviteCode}, 
		 #{token}, 
		 #{email}, 
		 #{mobUuid}, 
		 #{isRegistParty}, 
		 #{isReleaseParty}, 
		 #{isBusiness}, 
		 #{registSource}, 
		 #{createUserId}, 
		 #{registWay}, 
		 #{recommendTime}, 
		 #{lastRealName}, 
		 #{ages}, 
		 #{starSigns}, 
		 #{marriage})
    </insert>
    
    <!-- 根据ID删除数据-->
    <delete id="deleteById" parameterType="int">
        DELETE FROM  app_user_info WHERE id=#{value}
    </delete>
	
    <!-- 批量添加数据 -->
    <insert id="insertList" parameterType="java.util.List">
        INSERT INTO app_user_info (
		 id, 
		 account, 
		 password, 
		 duoju_no, 
		 face_url, 
		 sex, 
		 birthday, 
		 regist_time, 
		 nick_name, 
		 mobile, 
		 weixin_no, 
		 is_open, 
		 create_time, 
		 update_time, 
		 is_delete, 
		 province_name, 
		 city_name, 
		 area_name, 
		 app_base_party_city_id, 
		 scores, 
		 bg_url, 
		 signature, 
		 is_geek, 
		 is_moke, 
		 last_time, 
		 device_no, 
		 invite_code, 
		 token, 
		 email, 
		 mob_uuid, 
		 is_regist_party, 
		 is_release_party, 
		 is_business, 
		 regist_source, 
		 create_user_id, 
		 regist_way, 
		 recommend_time, 
		 last_real_name, 
		 ages, 
		 star_signs, 
		 marriage
		 )  VALUES 
		 <foreach collection="list" item="item" index="index" separator=",">
		(
		 #{item.id}, 
		 #{item.account}, 
		 #{item.password}, 
		 #{item.duojuNo}, 
		 #{item.faceUrl}, 
		 #{item.sex}, 
		 #{item.birthday}, 
		 #{item.registTime}, 
		 #{item.nickName}, 
		 #{item.mobile}, 
		 #{item.weixinNo}, 
		 #{item.isOpen}, 
		 #{item.createTime}, 
		 #{item.updateTime}, 
		 #{item.isDelete}, 
		 #{item.provinceName}, 
		 #{item.cityName}, 
		 #{item.areaName}, 
		 #{item.appBasePartyCityId}, 
		 #{item.scores}, 
		 #{item.bgUrl}, 
		 #{item.signature}, 
		 #{item.isGeek}, 
		 #{item.isMoke}, 
		 #{item.lastTime}, 
		 #{item.deviceNo}, 
		 #{item.inviteCode}, 
		 #{item.token}, 
		 #{item.email}, 
		 #{item.mobUuid}, 
		 #{item.isRegistParty}, 
		 #{item.isReleaseParty}, 
		 #{item.isBusiness}, 
		 #{item.registSource}, 
		 #{item.createUserId}, 
		 #{item.registWay}, 
		 #{item.recommendTime}, 
		 #{item.lastRealName}, 
		 #{item.ages}, 
		 #{item.starSigns}, 
		  #{item.marriage})
		 </foreach>		 
    </insert>
    
    <!-- 多条件查询用户信息 -->
    <select id="queryListByParams" parameterType="AppUserInfo" resultMap="AppUserInfoMap">
    	SELECT id, device_no, regist_time, last_time, city_name, sex, mobile FROM app_user_info 
    	WHERE regist_time BETWEEN #{beginTime} AND #{endTime}
    	 ORDER BY regist_time DESC 
    </select>
    <select id="queryCountByParams" resultType="int">
    	SELECT COUNT(id) FROM app_user_info 
    	WHERE regist_time BETWEEN #{beginTime} AND #{endTime}
    </select>
    
    <!-- 根据用户Ids查询用户列表 -->
    <select id="queryListByUserIdList"  resultMap="AppUserInfoMap">
    	SELECT <include refid="allSelectionColumn"/> FROM app_user_info
    	WHERE id IN (
    	 <foreach collection="list" item="item" index="index" separator=",">
		 #{item}
		 </foreach>)	 
    </select>
    
    <!-- 根据时间范围查询每日注册用户数量 -->
    <select id="queryRegistNumByTimeFrame" resultMap="BaseMap">
    	SELECT DATE_FORMAT(regist_time,'%Y%m%d') AS key_clm, COUNT(id) AS value_clm FROM app_user_info 
    	WHERE create_time BETWEEN #{beginTime} AND #{endTime} 
    	GROUP BY DATE_FORMAT(regist_time,'%Y%m%d')
    	ORDER BY create_time 
    </select>
</mapper>  