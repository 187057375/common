package $!{serviceTestPackage};

import org.springframework.transaction.annotation.Transactional;
import org.wsh.common.pager.pagination.Pagination;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.wsh.common.support.beans.OptionsResponseDO;
import org.wsh.common.support.response.ResponseDO;
import org.wsh.common.util.logger.LoggerService;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import javax.annotation.Resource;
import java.util.List;

/**
* author: wsh
* JDK-version:  JDK1.8
* comments:  服务接口单元测试
* since Date： ${date}
*/
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = "classpath:common-bean.xml")
public class ${bigServiceName}Test extends LoggerService{

    @Resource
    private ${bigServiceName} ${minServiceName};

    private Long id = 1L;

    @Test
    public void add() throws Exception{
        ${bigDoName} ${minDoName} = new ${bigDoName}();
#foreach($colum in $columnList)
#if($colum.type == "int")
        ${minDoName}.set$!{colum.bigName}(0);
#elseif($colum.type == "String")
        ${minDoName}.set$!{colum.bigName}("");
#elseif($colum.type == "Date")
        ${minDoName}.set$!{colum.bigName}(new Date());
#elseif($colum.type == "BigDecimal")
        ${minDoName}.set$!{colum.bigName}(new BigDecimal(0));
#elseif($colum.type == "boolean")
        ${minDoName}.set$!{colum.bigName}(true);
#end
#end
        ResponseDO<${bigDoName}> responseDO = ${minServiceName}.add${bigDoName}(${minDoName});
        Assert.isTrue(responseDO.isSuccess(),responseDO.getErrorMsg());
        id = responseDO.getData().getId();
        logger.info(responseDO.toString());
    }

    @Test
    public void selectListForPage() throws Exception{
        ${bigDoName} ${minDoName} = new ${bigDoName}();
        OptionsResponseDO<List<${bigDoName}>> responseDO = ${minServiceName}.query${bigDoName}ListForPage(${minDoName}, new Pagination());
        logger.info(responseDO.toString());
    }

    @Test
    public void selectById() throws Exception{
        ResponseDO<${bigDoName}> responseDO = ${minServiceName}.get${bigDoName}ById(id);
        Assert.isTrue(responseDO.isSuccess(),responseDO.getErrorMsg());
        logger.info(responseDO.toString());
    }

    @Test
    public void selectByParams() throws Exception{
        ${bigDoName} ${minDoName} = new ${bigDoName}();
        ResponseDO<${bigDoName}> responseDO = ${minServiceName}.get${bigDoName}ByParams(${minDoName});
        Assert.isTrue(responseDO.isSuccess(),responseDO.getErrorMsg());
        logger.info(responseDO.toString());
    }

    @Test
    public void updateById() throws Exception{
        ResponseDO<${bigDoName}> oldResponseDO = ${minServiceName}.get${bigDoName}ById(id);
        ${bigDoName} ${minDoName} = oldResponseDO.getData();
        ResponseDO<${bigDoName}> responseDO = ${minServiceName}.modify${bigDoName}(${minDoName});
        Assert.isTrue(responseDO.isSuccess(),responseDO.getErrorMsg());
        logger.info(responseDO.toString());
    }

    @Test
    public void delete() throws Exception{
        ${bigDoName} ${minDoName} = new ${bigDoName}();
        ${minDoName}.setId(id);
        ResponseDO<${bigDoName}> responseDO = ${minServiceName}.del${bigDoName}(id);
        Assert.isTrue(responseDO.isSuccess(),responseDO.getErrorMsg());
        logger.info(responseDO.toString());
    }
}