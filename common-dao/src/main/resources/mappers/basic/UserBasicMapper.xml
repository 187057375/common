<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.wsh.common.dao.basic.UserBasicDao" >
	<resultMap id="UserBasicMap" type="UserBasicDO">
	    <result property="id" column="id"/>
        <result property="userName" column="user_name"/>
        <result property="password" column="password"/>
        <result property="salt" column="salt"/>
        <result property="realName" column="real_name"/>
        <result property="faceUrl" column="face_url"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="status" column="status"/>
        <result property="version" column="version"/>
        <result property="description" column="description"/>
        <result property="isDeleted" column="is_deleted"/>
        <result property="gmtCreated" column="gmt_created"/>
        <result property="gmtModified" column="gmt_modified"/>
    </resultMap>
   	
   	<!-- 所有查询字段 -->
   	<sql id="allSelectionColumn">
		id,
        user_name,
        password,
        salt,
        real_name,
        face_url,
        phone,
        email,
        status,
        version,
        description,
        is_deleted,
        gmt_created,
        gmt_modified
	</sql>
   	
   	<!-- 根据ID查询实体数据 -->
    <select id="selectById" parameterType="Long" resultMap="UserBasicMap">
        SELECT <include refid="allSelectionColumn"/> FROM user_basic WHERE id = #{value} AND is_deleted = 0 LIMIT 1
    </select>

    <!--多条件查询表信息(分页) -->
    <select id="selectListByParams" parameterType="UserBasicDO" resultMap="UserBasicMap">
        SELECT <include refid="allSelectionColumn"/> FROM user_basic WHERE is_deleted = 0
    </select>
    <select id="selectCountByParams" parameterType="UserBasicDO" resultType="int">
        SELECT COUNT(id) FROM user_basic WHERE is_deleted = 0
    </select>

    <!-- 添加数据 -->
    <insert id="insert" parameterType="UserBasicDO">
		<selectKey resultType="Long" order="AFTER" keyProperty="id">
		SELECT LAST_INSERT_ID() AS id
		</selectKey>
        INSERT INTO user_basic(
        user_name,
        password,
        salt,
        real_name,
        face_url,
        phone,
        email,
        status,
        version,
        description,
        is_deleted,
        gmt_created,
        gmt_modified
        )VALUES(
        #{userName},
        #{password},
        #{salt},
        #{realName},
        #{faceUrl},
        #{phone},
        #{email},
        #{status},
        #{version},
        #{description},
        #{isDeleted},
        #{gmtCreated},
        #{gmtModified})
    </insert>

    <!-- 根据ID更新信息-->
    <update id="updateById" parameterType="UserBasicDO">
        UPDATE user_basic SET
        <if test="userName != null and userName != ''">
            user_name = #{userName},
        </if>
        <if test="password != null and password != ''">
            password = #{password},
        </if>
        <if test="salt != null and salt != ''">
            salt = #{salt},
        </if>
        <if test="realName != null and realName != ''">
            real_name = #{realName},
        </if>
        <if test="faceUrl != null and faceUrl != ''">
            face_url = #{faceUrl},
        </if>
        <if test="phone != null and phone != ''">
            phone = #{phone},
        </if>
        <if test="email != null and email != ''">
            email = #{email},
        </if>
        <if test="status != null ">
            status = #{status},
        </if>
        <if test="description != null and description != ''">
            description = #{description},
        </if>
        version = version + 1,
        gmt_modified = NOW()
        WHERE id = #{id} AND version = #{version}
    </update>

    <!-- 根据ID更新删除状态-->
    <update id="updateIsDeleteById" parameterType="UserBasicDO">
        UPDATE user_basic SET is_deleted = #{isDeleted}, version = version + 1
        WHERE id = #{id} AND is_deleted = 0 AND version = #{version}
    </update>
    
    <!-- 根据ID删除数据-->
    <delete id="deleteById" parameterType="Long">
        DELETE FROM user_basic WHERE id = #{value}
    </delete>
	
    <!-- 批量添加数据 -->
    <insert id="insertList" parameterType="java.util.List">
        INSERT INTO user_basic
		(id,user_name,password,salt,real_name,face_url,phone,email,status,version,description,is_deleted,gmt_created,gmt_modified)
		VALUES
		<foreach collection="list" item="item" index="index" separator=",">
		(#{item.id},#{item.userName},#{item.password},#{item.salt},#{item.realName},#{item.faceUrl},#{item.phone},#{item.email},#{item.status},#{item.version},#{item.description},#{item.isDeleted},#{item.gmtCreated},#{item.gmtModified})
		</foreach>
    </insert>


    <!-- 根据用户Ids查询用户信息 -->
    <select id="selectUserNameByIds" resultType="map" parameterType="org.wsh.common.interceptor.MapParam">
        SELECT id, user_name FROM user_basic
        WHERE id IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
</mapper>  